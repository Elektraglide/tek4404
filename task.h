/*        UniFlex Task Table Entry*/#ifndef uword#define uword unsigned short#endif#ifndef ulong#define ulong unsigned long#endif#ifndef uint#define uint unsigned int#endifstruct task {  struct task   *tslink,	/*  link to running tasks */                *tsslnk;	/*  link to sleeping tasks  */  uword		tsuid;		/*  user id field  */  uword		tstid;		/*  unique task id */  uword		tstidp;		/*  parent's task id  */  int		tstty;		/*  control terminal id  */  int		tsevnt;		/*  event task is waiting on */  char		*tstext;	/*  task text table pointer  */  char		*tsswap;	/*  disk offset of swap image  */  uword		tsalrm;		/*  seconds until alarm  */  uword		tscpu;		/*  cpu information */  uword		tssize;		/*  size of swap image  */  uword		tstxtp;		/*  # of text pages  */  uword		tsdatp;		/* number of data pages  */  uword		tsstkp;		/*  number of stack pages  */  ulong		tsutop;		/*  physical user block address  */  ulong		tssignal[2];	/*  pending signals  */  ulong		tssigsoft[2];	/*  pending soft signals  */  ulong		tssigmsk[2];	/* signal masks (ON: signal not being ignored)*/  char		tsstat;		/*  task status code  */  char		tsmode;		/*  task mode code  */  char		tsmode2;	/*  task mode code 2  */  char		tsprir;		/*  task priority  */  char		tsprb;		/*  task priority bias  */  char		tsact;		/*  task activity counter */  char		tsage;		/*  task  residency age */};/*      task status codes*/#define TRUN   '\1'   /*  running  */#define TSLEEP '\2'   /*  sleeping (high priority)  */#define TWAIT  '\3'   /*  waiting (low priority)  */#define TCREAT '\4'   /*  creating new task  */#define TTERM  '\5'   /*  termination process  */#define TTRACE '\6'   /*  trace mode  *//*      task mode codes*/#define TCORE  0x01   /*  task is in core  */#define TLOCK  0x02   /*  task is locked in core  */#define TSYSTM 0x04   /*  task is system scheduler  */#define TTRACP 0x08   /*  task is being traced  */#define TSWAPO 0x10   /*  task is being swapped  */#define TARGX  0x20   /*  task is in argument expansion  */
